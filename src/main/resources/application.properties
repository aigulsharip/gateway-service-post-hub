server.port=8100
server.forward-headers-strategy=framework

spring.application.name=gateway-service

# Additional
internal.gateway.service.name=pw-gateway
internal.header.name=pw-service-name
internal.access.service.hostname=http://localhost:8100

# List of all microservices:
internal.iam.service.name=iam-service
internal.utils.service.name=utils-service

# Actuator - health-check
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

# Consul
spring.cloud.consul.host=185.233.117.175
spring.cloud.consul.port=8500
spring.cloud.consul.discovery.register=true
spring.cloud.consul.discovery.enabled=true
spring.cloud.consul.discovery.health-check-path=/actuator/health
spring.cloud.consul.discovery.health-check-interval=10s
spring.cloud.consul.discovery.prefer-ip-address=true

# Logging levels
logging.level.root=INFO
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate=DEBUG

# Opened end-points
end.point.swagger=/v3/api-docs
end.point.auth=/auth
opened.end.points=${end.point.swagger}, ${end.point.auth}

# Swagger
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/v3/api-docs
springdoc.api-docs.enabled=true
springdoc.api-docs.groups.enabled=true
springdoc.swagger-ui.operationsSorter=alpha
springdoc.swagger-ui.defaultModelsExpandDepth=-1

# Springdoc routes configurations
# Gateway-service
springdoc.group-configs[0].group=${spring.application.name}
springdoc.group-configs[0].packages-to-scan[0]=com.post_hub.gateway.controller
springdoc.group-configs[0].display-name=${spring.application.name}
springdoc.group-configs[0].paths-to-match[0]=/swagger-ui/**
springdoc.swagger-ui.urls[0].url=${end.point.swagger}
springdoc.swagger-ui.urls[0].name=${spring.application.name}

# Iam-service
springdoc.group-configs[1].group=${internal.iam.service.name}
springdoc.group-configs[1].paths-to-match[0]=/${internal.iam.service.name}/**
springdoc.group-configs[1].paths-to-exclude[0]=/${internal.iam.service.name}/inner/**
springdoc.group-configs[1].display-name=${internal.iam.service.name}
springdoc.swagger-ui.urls[1].url=/${internal.iam.service.name}${end.point.swagger}
springdoc.swagger-ui.urls[1].name=${internal.iam.service.name}

# Utils-service
springdoc.group-configs[2].group=${internal.utils.service.name}
springdoc.group-configs[2].paths-to-match[0]=/${internal.utils.service.name}/**
springdoc.group-configs[2].paths-to-exclude[0]=/${internal.utils.service.name}/inner/**
springdoc.group-configs[2].display-name=${internal.utils.service.name}
springdoc.swagger-ui.urls[2].url=/${internal.utils.service.name}${end.point.swagger}
springdoc.swagger-ui.urls[2].name=${internal.utils.service.name}

# Gateway filters
internal.inner.auth.filter=InnerAuthFilter
internal.token.validation.filter=TokenValidationFilter

# 70s - temporary, must be changed
spring.cloud.gateway.httpclient.connect-timeout=70000
spring.cloud.gateway.httpclient.response-timeout=70s
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true
spring.cloud.discovery.enabled=true

# Gateway routes configurations
# Iam-service, InnerController - only ${internal.inner.auth.filter}
spring.cloud.gateway.routes[0].id=iam-inner
spring.cloud.gateway.routes[0].uri=lb://${internal.iam.service.name}
spring.cloud.gateway.routes[0].predicates[0]=Path=/inner/iam-service/**
spring.cloud.gateway.routes[0].predicates[1]=Method=GET,POST
spring.cloud.gateway.routes[0].filters[0]=${internal.inner.auth.filter}
spring.cloud.gateway.routes[0].filters[1]=RewritePath=/inner/iam-service(?<segment>/?.*), /inner$\{segment}

# Iam-service, AuthController - permit all
spring.cloud.gateway.routes[1].id=user-auth
spring.cloud.gateway.routes[1].uri=lb://${internal.iam.service.name}
spring.cloud.gateway.routes[1].predicates[0]=Path=${end.point.auth}/**
spring.cloud.gateway.routes[1].predicates[1]=Method=GET, POST

# Iam-service, UserController - only ${internal.token.validation.filter}
spring.cloud.gateway.routes[2].id=users
spring.cloud.gateway.routes[2].uri=lb://${internal.iam.service.name}
spring.cloud.gateway.routes[2].predicates[0]=Path=/users/**
spring.cloud.gateway.routes[2].predicates[1]=Method=POST, GET, PUT, DELETE
spring.cloud.gateway.routes[2].filters[0]=${internal.token.validation.filter}

# Iam-service, PostController - only ${internal.token.validation.filter}
spring.cloud.gateway.routes[4].id=posts
spring.cloud.gateway.routes[4].uri=lb://${internal.iam.service.name}
spring.cloud.gateway.routes[4].predicates[0]=Path=/posts/**
spring.cloud.gateway.routes[4].predicates[1]=Method=GET, POST, PUT, DELETE

# Iam-service, CommentController - only ${internal.token.validation.filter}
spring.cloud.gateway.routes[5].id=comments
spring.cloud.gateway.routes[5].uri=lb://${internal.iam.service.name}
spring.cloud.gateway.routes[5].predicates[0]=Path=/comments/**
spring.cloud.gateway.routes[5].predicates[1]=Method=GET, POST, PUT, DELETE

# Utils-service, InnerController - only ${internal.inner.auth.filter}
spring.cloud.gateway.routes[3].id=utils-inner
spring.cloud.gateway.routes[3].uri=lb://${internal.utils.service.name}
spring.cloud.gateway.routes[3].predicates[0]=Path=/utils-service/inner/**
spring.cloud.gateway.routes[3].predicates[1]=Method=GET,POST
spring.cloud.gateway.routes[3].filters[0]=${internal.inner.auth.filter}
spring.cloud.gateway.routes[3].filters[1]=RewritePath=/utils-service/inner(?<segment>/?.*), /inner$\{segment}

# Utils-service, ActionLogController - only ${internal.inner.auth.filter}
spring.cloud.gateway.routes[6].id=action-logs
spring.cloud.gateway.routes[6].uri=lb://${internal.utils.service.name}
spring.cloud.gateway.routes[6].predicates[0]=Path=/actionLogs/**
spring.cloud.gateway.routes[6].predicates[1]=Method=GET, POST, PUT, DELETE

# custom config
# Utils-service, general routing for Swagger and others
spring.cloud.gateway.routes[7].id=utils-general
spring.cloud.gateway.routes[7].uri=lb://${internal.utils.service.name}
spring.cloud.gateway.routes[7].predicates[0]=Path=/utils-service/**
spring.cloud.gateway.routes[7].filters[0]=RewritePath=/utils-service(?<segment>/.*), $\{segment}

